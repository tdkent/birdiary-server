generator client {
  provider = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  password String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  profile Profile?
  fav_bird Favorite?
  sightings Sighting[]
}

model Profile {
  id Int @id @default(autoincrement())
  name String?
  location String?
  user_id Int @unique
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Favorite {
  user_id Int @id @unique
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  bird_id Int?
  bird Bird? @relation(fields:[bird_id], references: [id])
}

model Bird {
  id Int @id @default(autoincrement())
  comm_name String @unique
  sci_name String @unique
  rarity Int
  family Family @relation(fields: [spec_id], references: [id])
  spec_id Int
  favorites Favorite[]
  sightings Sighting[]
}

model Family {
  id Int @unique
  name String
  birds Bird[]
}

model Sighting {
  id Int @id @default(autoincrement())
  user_id Int
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  bird_id Int
  bird Bird @relation(fields: [bird_id], references: [id])
  location_id Int?
  location Location? @relation(fields: [location_id], references: [id])
  date DateTime @db.Date
  desc String?
}

model Location {
  id Int @id @default(autoincrement())
  name String @unique
  lat Float
  lng Float
  sightings Sighting[]
}