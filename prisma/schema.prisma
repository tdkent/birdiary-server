generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name String?
  locationId Int?
  location Location? @relation(fields: [locationId], references: [id])
  favoriteBirdId Int?
  bird Bird? @relation(fields: [favoriteBirdId], references: [id])
  sightings Sighting[]
}

enum Rarity {
  Common
  Uncommon
  Rare
}
model Bird {
  id Int @id @default(autoincrement())
  commonName String @unique
  scientificName String @unique
  family String
  rarity Rarity 
  description String
  imgAttribute String?
  sightings Sighting[]
  users User[]
}

model Sighting {
  id Int @id @default(autoincrement())
  userId Int 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  birdId Int
  bird Bird @relation(fields: [birdId], references: [id])
  locationId Int?
  location Location? @relation(fields: [locationId], references: [id])
  date DateTime @db.Date
  description String?
}

model Location {
  id Int @id @default(autoincrement())
  name String @unique
  lat Float
  lng Float
  sightings Sighting[]
  users User[]
}